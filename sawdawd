# --- Algoritmo Divide y Vencer치s para contar palabras con vocal en una matriz cuadrada ---

importar aleatorio

# --- Funci칩n para generar una palabra aleatoria de 4 letras ---
definir generar_palabra():
    devolver ''.unir(chr(aleatorio.entre(97, 122)) para cada _ en rango(4))  # letras de 'a' a 'z'


# --- Generar una matriz cuadrada con palabras ---
definir generar_matriz(tama침o):
    devolver [[generar_palabra() para cada _ en rango(tama침o)] para cada _ en rango(tama침o)]


# --- Verificar si una palabra contiene al menos una vocal ---
definir contiene_vocal(palabra):
    para cada letra en palabra:
        si letra est치 en 'aeiou':
            devolver Verdadero
    devolver Falso


# --- Algoritmo Divide y Vencer치s ---
definir contar_palabras_con_vocal(matriz):
    n = longitud(matriz)

    # Caso base: matriz de 1x1
    si n es igual a 1:
        si contiene_vocal(matriz[0][0]):
            devolver 1
        sino:
            devolver 0

    # Caso base para matrices peque침as (por ejemplo, 2x2)
    si n es igual a 2:
        devolver suma(1 por cada fila en matriz por cada palabra en fila si contiene_vocal(palabra))

    mitad = n // 2

    # Dividir la matriz en 4 submatrices
    submatriz_A = [fila[:mitad] por cada fila en matriz[:mitad]]
    submatriz_B = [fila[mitad:] por cada fila en matriz[:mitad]]
    submatriz_C = [fila[:mitad] por cada fila en matriz[mitad:]]
    submatriz_D = [fila[mitad:] por cada fila en matriz[mitad:]]

    total = 0
    si submatriz_A: total += contar_palabras_con_vocal(submatriz_A)
    si submatriz_B: total += contar_palabras_con_vocal(submatriz_B)
    si submatriz_C: total += contar_palabras_con_vocal(submatriz_C)
    si submatriz_D: total += contar_palabras_con_vocal(submatriz_D)

    devolver total


# --- Programa principal ---
si __nombre__ es igual a "__principal__":
    tama침o = entero(entrada("Ingrese el tama침o de la matriz cuadrada: "))

    matriz = generar_matriz(tama침o)

    imprimir("\n游늶 MATRIZ GENERADA:\n")
    para cada fila en matriz:
        imprimir(' '.unir(fila))

    total_con_vocal = contar_palabras_con_vocal(matriz)

    imprimir(f"\n游댟 Total de palabras con al menos una vocal: {total_con_vocal}")
